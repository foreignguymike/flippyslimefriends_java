buildscript {
	repositories {
		mavenCentral()
		maven { url 'https://s01.oss.sonatype.org' }
		mavenLocal()
		google()
		gradlePluginPortal()
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
	}
	dependencies {
		classpath "com.android.tools.build:gradle:$androidPluginVersion"
		classpath "org.docstr:gwt-gradle-plugin:$gwtPluginVersion"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
	}
}

allprojects {
	apply plugin: 'eclipse'
	apply plugin: 'idea'

	// This allows you to "Build and run using IntelliJ IDEA", an option in IDEA's Settings.
	idea {
		module {
			outputDir file('build/classes/java/main')
			testOutputDir file('build/classes/java/test')
		}
	}
}

configure(subprojects - project(':android')) {
	apply plugin: 'java-library'
	sourceCompatibility = 11
	compileJava {
		options.incremental = true
	}

	// From https://lyze.dev/2021/04/29/libGDX-Internal-Assets-List/
	// The article can be helpful when using assets.txt in your project.
	tasks.register('generateAssetList') {
		inputs.dir("${project.rootDir}/assets/")
		// projectFolder/assets
		File assetsFolder = new File("${project.rootDir}/assets/")
		// projectFolder/assets/assets.txt
		File assetsFile = new File(assetsFolder, "assets.txt")
		// delete that file in case we've already created it
		assetsFile.delete()

		// iterate through all files inside that folder
		// convert it to a relative path
		// and append it to the file assets.txt
		fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.each {
			assetsFile.append(it + "\n")
		}
	}
	processResources.dependsOn 'generateAssetList'

}

subprojects {
	version = '0.0.1'
	ext.appName = 'FS2J'
	repositories {
		mavenCentral()
		maven { url 'https://s01.oss.sonatype.org' }
		mavenLocal()
		gradlePluginPortal()
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
		maven { url 'https://jitpack.io' }
	}
}

eclipse.project.name = 'FS2J' + '-parent'
